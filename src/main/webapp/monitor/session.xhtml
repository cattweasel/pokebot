<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:c="http://java.sun.com/jsp/jstl/core">
<ui:composition template="../template.xhtml">
	<ui:define name="content">
		<ui:fragment rendered="#{base.loggedInUser eq null or !base.loggedInUser.hasCapability('SystemAdministrator')}">
			<p><b><h:outputText value="#{msgs.error}" />:</b>&nbsp;<h:outputText value="#{msgs.page_not_authorized}" /></p>
			<p><h:outputText escape="false" value="#{msgs.back_to_dashboard}" /></p>
		</ui:fragment>
		<ui:fragment rendered="#{base.loggedInUser ne null and base.loggedInUser.hasCapability('SystemAdministrator')}">
			<script type="text/javascript">
			
			Ext.onReady(function() {
				
				var store = Ext.create('Ext.data.Store', {
				    model: 'BotSession',
				    proxy: {
				        type: 'ajax',
				        url: '#{request.contextPath}/rest/session/list',
				        reader: {
				            type: 'json',
				            rootProperty: 'objects',
				            successProperty: 'success',
				            totalProperty: 'total'
				        },
				        extraParams: {
				        		userId: '#{base.loggedInUserId}'
				        }
				    },
				    remoteSort: true,
				    pageSize: 20,
					autoLoad: true
				});
				
				Ext.create('Ext.grid.Panel', {
	    			    title: '#{msgs.navigation_monitor_session_list}',
	    			    renderTo: Ext.get('content'),
	    			    store: store,
	    			    height: 608,
	    			    columns: [{
	    			    		header: '#{msgs.user}',
	    			    		dataIndex: 'user',
	    			    		renderer: function(val) {
	    			    			return val === null ? null : val.username === null ? val.name : val.username;
	    			    		},
	    			    		sortable: false,
	    			    		flex: 1
	    			    }, {
		    			    	header: '#{msgs.created}', 
		    			    	dataIndex: 'created',
		    			    	renderer: function(val) {
	    			    			return val === null || val === undefined || val === 0 ? null : new Date(val);
	    			    		},
		    			    	flex: 1
	    			    }, {
	    			    		header: '#{msgs.modified}',
	    			    		dataIndex: 'modified',
	    			    		renderer: function(val) {
	    			    			return val === null || val === undefined || val === 0 ? null : new Date(val);
	    			    		},
	    			    		flex: 1
	    			    }, {
	    			    		header: '#{msgs.notifications}',
	    			    		dataIndex: 'notifications',
	    			    		sortable: false,
	    			    		flex: 1
	    			    }, {
	    			    		header: '#{msgs.position}',
	    			    		dataIndex: 'attributes',
	    			    		renderer: function(val) {
	    			    			return val === null ? null : val.latitude === null || val.latitude === undefined
	    			    					? null : val.latitude + ":" + val.longitude;
	    			    		},
	    			    		sortable: false,
	    			    		flex: 1
	    			    }],
	    			    bbar: Ext.create('Ext.PagingToolbar', {
	    		            store: store,
	    		            displayInfo: true
	    		        })
	    			});
				
			});
			
			</script>
		</ui:fragment>
	</ui:define>
</ui:composition>
</html>
